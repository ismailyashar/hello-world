{
    "version": 3,
    "terraform_version": "0.11.14",
    "serial": 8,
    "lineage": "a8feb5b0-dbb8-01ad-ab4d-10d0f5eba6dc",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "helm_deploy"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.chart_values_template": {
                    "type": "template_file",
                    "depends_on": [
                        "local.template_all_values"
                    ],
                    "primary": {
                        "id": "ddf8246efe9aa2cdfe9850d4b8ee6666ec3941f1dfd20d74a8683cb4a467fde7",
                        "attributes": {
                            "id": "ddf8246efe9aa2cdfe9850d4b8ee6666ec3941f1dfd20d74a8683cb4a467fde7",
                            "rendered": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 5\n\nimage:\n  repository: fsadykov/hello-world:latest\n  pullPolicy: IfNotPresent\n\napp:\n  port: 5000\n\nglobalEnvironments:\n  enabled: true\n\n  environments:\n  - name: ENVIRONMENT\n    value: PROD\n  \nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n  - host: dev.hello.fuchicorp.com\n    paths:\n    - /\n  tls:\n  - secretName: hello-world-tls\n    hosts:\n    - dev.hello.fuchicorp.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n",
                            "template": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 5\n\nimage:\n  repository: ${deployment_image}\n  pullPolicy: IfNotPresent\n\napp:\n  port: 5000\n\nglobalEnvironments:\n  enabled: true\n\n  environments:\n  - name: ENVIRONMENT\n    value: PROD\n  \nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n  - host: ${deployment_endpoint}\n    paths:\n    - /\n  tls:\n  - secretName: hello-world-tls\n    hosts:\n    - ${deployment_endpoint}\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n",
                            "vars.%": "4",
                            "vars.deployment_endpoint": "dev.hello.fuchicorp.com",
                            "vars.deployment_image": "fsadykov/hello-world:latest",
                            "vars.deployment_name": "hello-world",
                            "vars.env_vars": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.helm_deploy.provider.template"
                },
                "helm_release.helm_deployment": {
                    "type": "helm_release",
                    "depends_on": [
                        "local.recreate_pods",
                        "local.timeout",
                        "local_file.deployment_values"
                    ],
                    "primary": {
                        "id": "hello-world-dev",
                        "attributes": {
                            "chart": "./charts/hello-world",
                            "disable_webhooks": "false",
                            "force_update": "false",
                            "id": "hello-world-dev",
                            "metadata.#": "1",
                            "metadata.0.chart": "hello-world",
                            "metadata.0.name": "hello-world-dev",
                            "metadata.0.namespace": "dev",
                            "metadata.0.revision": "1",
                            "metadata.0.values": "affinity: {}\napp:\n  port: 5000\nfullnameOverride: \"\"\nglobalEnvironments:\n  enabled: true\n  environments:\n  - name: ENVIRONMENT\n    value: PROD\nimage:\n  pullPolicy: IfNotPresent\n  repository: fsadykov/hello-world:latest\nimagePullSecrets: []\ningress:\n  annotations:\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    kubernetes.io/ingress.class: nginx\n  enabled: true\n  hosts:\n  - host: dev.hello.fuchicorp.com\n    paths:\n    - /\n  tls:\n  - hosts:\n    - dev.hello.fuchicorp.com\n    secretName: hello-world-tls\nnameOverride: \"\"\nnodeSelector: {}\nreplicaCount: 5\nresources: {}\nservice:\n  port: 80\n  type: ClusterIP\ntolerations: []\n",
                            "metadata.0.version": "0.1.0",
                            "name": "hello-world-dev",
                            "namespace": "dev",
                            "recreate_pods": "false",
                            "reuse": "false",
                            "reuse_values": "false",
                            "status": "DEPLOYED",
                            "timeout": "400",
                            "values.#": "1",
                            "values.0": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 5\n\nimage:\n  repository: fsadykov/hello-world:latest\n  pullPolicy: IfNotPresent\n\napp:\n  port: 5000\n\nglobalEnvironments:\n  enabled: true\n\n  environments:\n  - name: ENVIRONMENT\n    value: PROD\n  \nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n  - host: dev.hello.fuchicorp.com\n    paths:\n    - /\n  tls:\n  - secretName: hello-world-tls\n    hosts:\n    - dev.hello.fuchicorp.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}",
                            "verify": "false",
                            "version": "0.1.0",
                            "wait": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.helm_deploy.provider.helm"
                },
                "local_file.deployment_values": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.chart_values_template"
                    ],
                    "primary": {
                        "id": "50b68fca8ac8ca88944d221e506241735642dac2",
                        "attributes": {
                            "content": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 5\n\nimage:\n  repository: fsadykov/hello-world:latest\n  pullPolicy: IfNotPresent\n\napp:\n  port: 5000\n\nglobalEnvironments:\n  enabled: true\n\n  environments:\n  - name: ENVIRONMENT\n    value: PROD\n  \nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n  - host: dev.hello.fuchicorp.com\n    paths:\n    - /\n  tls:\n  - secretName: hello-world-tls\n    hosts:\n    - dev.hello.fuchicorp.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}",
                            "directory_permission": "0777",
                            "file_permission": "0777",
                            "filename": "charts/.cache/hello-world-values.yaml",
                            "id": "50b68fca8ac8ca88944d221e506241735642dac2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.helm_deploy.provider.local"
                }
            },
            "depends_on": []
        }
    ]
}
